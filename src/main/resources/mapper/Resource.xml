<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="com.WAREHOUSE.dao.ResourceDAO">

  <!-- Resource.listResource -->
  <select
  	id="listResource"
  	parameterType="hashmap"
  	resultType="Resource"
  >
		<![CDATA[
    SELECT
      A.resrcCd, A.resrcNm, A.resrcType, A.houseCd, A.compCd, A.maker, A.unit, A.quality,
      A.option1, A.option2, A.protectedQty, A.unitPrice, A.barcode,
      B.houseNm, C.compNm, D.inQty, E.outQty, F.fileUrl,
      (IFNULL(D.inQty, 0) + IFNULL(E.outQty, 0)) qty
    FROM (
      SELECT *
      FROM tblResource
      WHERE flagYn = 'Y'
    ) A
    LEFT JOIN (
      SELECT *
      FROM tblHouse
      WHERE flagYn = 'Y'
    ) B ON B.houseCd = A.houseCd
    LEFT JOIN (
      SELECT *
      FROM tblCompany
      WHERE flagYn = 'Y'
    ) C ON C.compCd = A.compCd
    LEFT JOIN (
      SELECT IFNULL(SUM(qty), 0) inQty, resrcCd, MAX(issueDt) issueDt
      FROM tblResourceInOut
      WHERE flagYn = 'Y' AND planYn = 'N' AND qty > 0
      GROUP BY resrcCd
    ) D ON D.resrcCd = A.resrcCd
    LEFT JOIN (
      SELECT IFNULL(SUM(qty), 0) outQty, resrcCd, MAX(issueDt) issueDt
      FROM tblResourceInOut
      WHERE flagYn = 'Y' AND planYn = 'N' AND qty < 0
      GROUP BY resrcCd
    ) E ON E.resrcCd = A.resrcCd
    LEFT JOIN (
      SELECT tableKey, fileUrl
	    FROM tblFiles F1
      INNER JOIN (
        SELECT MAX(fileSeq) maxFileSeq
        FROM tblFiles
        WHERE flagYn = 'Y' AND tableNm = "tblResource"
        GROUP BY tableNm, tableKey
      ) F2 ON F1.fileSeq = F2.maxFileSeq
    ) F ON F.tableKey = A.resrcCd
    ]]>
		<if test='findResrcNm!="" and findResrcNm!=null'>
			WHERE A.resrcNm LIKE CONCAT('%', #{findResrcNm}, '%')
		</if>
		ORDER BY GREATEST (
      IFNULL(E.issueDt, "1000-10-10"),
      IFNULL(D.issueDt, "1000-10-10"),
      IFNULL(A.issueDt, "1000-10-10")
    ) DESC
  </select>

  <!-- Resource.showResource -->
  <select
  	id="showResource"
  	parameterType="hashmap"
  	resultType="Resource"
  >
    <![CDATA[
    SELECT
      A.resrcCd, A.resrcNm, A.resrcType, A.houseCd, A.compCd, A.maker, A.unit, A.quality,
      A.option1, A.option2, A.protectedQty, A.unitPrice, A.barcode, A.remarks, A.flagYn,
      A.regDt, A.issueDt, B.houseNm, C.compNm, D.inQty, E.outQty,
      (IFNULL(D.inQty, 0) + IFNULL(E.outQty, 0)) qty
    FROM (
      SELECT *
      FROM tblResource
      WHERE flagYn = 'Y' AND resrcCd = #{resrcCd}
    ) A
    LEFT JOIN (
      SELECT *
      FROM tblHouse
      WHERE flagYn = 'Y'
    ) B ON B.houseCd = A.houseCd
    LEFT JOIN (
      SELECT *
      FROM tblCompany
      WHERE flagYn = 'Y'
    ) C ON C.compCd = A.compCd
    LEFT JOIN (
      SELECT IFNULL(SUM(qty), 0) inQty, resrcCd
      FROM tblResourceInOut
      WHERE flagYn = 'Y' AND planYn = 'N' AND qty > 0
      GROUP BY resrcCd
    ) D ON D.resrcCd = A.resrcCd
    LEFT JOIN (
      SELECT IFNULL(SUM(qty), 0) outQty, resrcCd
      FROM tblResourceInOut
      WHERE flagYn = 'Y' AND planYn = 'N' AND qty < 0
      GROUP BY resrcCd
    ) E ON E.resrcCd = A.resrcCd
    ]]>
  </select>

  <!-- Resource.saveResource -->
  <select
  	id="saveResource"
  	parameterType="Resource"
  	resultType="hashmap"
  >
    CALL sp_Resource (
      #{resrcCd},
      #{resrcNm},
      #{resrcType},
      #{houseCd},
      #{compCd},
      #{protectedQty},
      #{quality},
      #{unit},
      #{option1},
      #{option2},
      #{maker},
      #{unitPrice},
      #{remarks},
      #{flagYn},
      #{issueId}
    );
  </select>

</mapper>
